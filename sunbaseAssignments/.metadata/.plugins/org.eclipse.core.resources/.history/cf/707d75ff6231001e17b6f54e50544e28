package com.sunbase.assingment.controller;
import org.json.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.*;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.client.RestTemplate;

import com.fasterxml.jackson.databind.util.JSONPObject;
import com.sunbase.assingment.model.Customer;

import java.util.Arrays;
import java.util.List;
@Controller
public class CustomerController {

	
	

    private final String AUTH_API_URL = "https://qa2.sunbasedata.com/sunbase/portal/api/assignment_auth.jsp";
    private final String CUSTOMER_API_URL = "https://qa2.sunbasedata.com/sunbase/portal/api/assignment.jsp";
    private final RestTemplate restTemplate;

    @Autowired
    public CustomerController(RestTemplate restTemplate) {
        this.restTemplate = restTemplate;
    }

    @GetMapping("/login")
    public String loginPage() {
        return "login";
    }

    @PostMapping("/login")
    public String authenticateUser(@RequestParam String login_id, @RequestParam String password, Model model) {
        HttpHeaders headers = new HttpHeaders();
        headers.setContentType(MediaType.APPLICATION_JSON);

        String requestBody = "{\"login_id\":\"" + login_id + "\",\"password\":\"" + password + "\"}";
        HttpEntity<String> request = new HttpEntity<>(requestBody, headers);

        ResponseEntity<String> response = restTemplate.exchange(AUTH_API_URL, HttpMethod.POST, request, String.class);
        if (response.getStatusCode() == HttpStatus.OK) {
        	JSONObject json = new  JSONObject(response.getBody());
            String token = json.getString("access_token");
            // Save the token in session or in a cookie
            model.addAttribute("bearerToken", token);
            return "redirect:/customer/list";
        } else {
            model.addAttribute("errorMessage", "Authentication failed!");
            return "login";
        }
    }

    @GetMapping("/customer/list")
    public String getCustomerList(@ModelAttribute("bearerToken") String bearerToken, Model model) {
        HttpHeaders headers = new HttpHeaders();
        headers.setBearerAuth(model.getAttribute("bearerToken"));
        HttpEntity<String> request = new HttpEntity<>(headers);

        ResponseEntity<Customer[]> response = restTemplate.exchange(CUSTOMER_API_URL + "?cmd=get_customer_list", HttpMethod.GET, request, Customer[].class);
        if (response.getStatusCode() == HttpStatus.OK) {
            List<Customer> customers = Arrays.asList(response.getBody());
            model.addAttribute("customers", customers);
            return "customer_list";
        } else {
            model.addAttribute("errorMessage", "Failed to fetch customer list!");
            return "login"; // Redirect to login page
        }
    }

}
